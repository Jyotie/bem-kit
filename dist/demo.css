/*!
 * bem-kit v0.0.2
 * @author : Irfan Maulana
 * @repo   : https://github.com/mazipan/bem-kit
 */
.nav__tabs { margin: 0; padding: 0; list-style: none; }

/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/** 1. Change the default font family in all browsers (opinionated). 2. Correct the line height in all browsers. 3. Prevent adjustments of font size after orientation changes in IE on Windows Phone and in iOS. */
/* Document ========================================================================== */
html { font-family: sans-serif; /* 1 */ line-height: 1.15; /* 2 */ -ms-text-size-adjust: 100%; /* 3 */ -webkit-text-size-adjust: 100%; /* 3 */ }

/* Sections ========================================================================== */
/** Remove the margin in all browsers (opinionated). */
body { margin: 0; }

/** Add the correct display in IE 9-. */
article, aside, footer, header, nav, section { display: block; }

/** Correct the font size and margin on `h1` elements within `section` and `article` contexts in Chrome, Firefox, and Safari. */
h1 { font-size: 2em; margin: 0.67em 0; }

/* Grouping content ========================================================================== */
/** Add the correct display in IE 9-. 1. Add the correct display in IE. */
figcaption, figure, main { /* 1 */ display: block; }

/** Add the correct margin in IE 8. */
figure { margin: 1em 40px; }

/** 1. Add the correct box sizing in Firefox. 2. Show the overflow in Edge and IE. */
hr { box-sizing: content-box; /* 1 */ height: 0; /* 1 */ overflow: visible; /* 2 */ }

/** 1. Correct the inheritance and scaling of font size in all browsers. 2. Correct the odd `em` font sizing in all browsers. */
pre { font-family: monospace, monospace; /* 1 */ font-size: 1em; /* 2 */ }

/* Text-level semantics ========================================================================== */
/** 1. Remove the gray background on active links in IE 10. 2. Remove gaps in links underline in iOS 8+ and Safari 8+. */
a { background-color: transparent; /* 1 */ -webkit-text-decoration-skip: objects; /* 2 */ }

/** Remove the outline on focused links when they are also active or hovered in all browsers (opinionated). */
a:active, a:hover { outline-width: 0; }

/** 1. Remove the bottom border in Firefox 39-. 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari. */
abbr[title] { border-bottom: none; /* 1 */ text-decoration: underline; /* 2 */ text-decoration: underline dotted; /* 2 */ }

/** Prevent the duplicate application of `bolder` by the next rule in Safari 6. */
b, strong { font-weight: inherit; }

/** Add the correct font weight in Chrome, Edge, and Safari. */
b, strong { font-weight: bolder; }

/** 1. Correct the inheritance and scaling of font size in all browsers. 2. Correct the odd `em` font sizing in all browsers. */
code, kbd, samp { font-family: monospace, monospace; /* 1 */ font-size: 1em; /* 2 */ }

/** Add the correct font style in Android 4.3-. */
dfn { font-style: italic; }

/** Add the correct background and color in IE 9-. */
mark { background-color: #ff0; color: #000; }

/** Add the correct font size in all browsers. */
small { font-size: 80%; }

/** Prevent `sub` and `sup` elements from affecting the line height in all browsers. */
sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; }

sub { bottom: -0.25em; }

sup { top: -0.5em; }

/* Embedded content ========================================================================== */
/** Add the correct display in IE 9-. */
audio, video { display: inline-block; }

/** Add the correct display in iOS 4-7. */
audio:not([controls]) { display: none; height: 0; }

/** Remove the border on images inside links in IE 10-. */
img { border-style: none; }

/** Hide the overflow in IE. */
svg:not(:root) { overflow: hidden; }

/* Forms ========================================================================== */
/** 1. Change the font styles in all browsers (opinionated). 2. Remove the margin in Firefox and Safari. */
button, input, optgroup, select, textarea { font-family: sans-serif; /* 1 */ font-size: 100%; /* 1 */ line-height: 1.15; /* 1 */ margin: 0; /* 2 */ }

/** Show the overflow in IE. 1. Show the overflow in Edge. */
button, input { /* 1 */ overflow: visible; }

/** Remove the inheritance of text transform in Edge, Firefox, and IE. 1. Remove the inheritance of text transform in Firefox. */
button, select { /* 1 */ text-transform: none; }

/** 1. Prevent a WebKit bug where (2) destroys native `audio` and `video` controls in Android 4. 2. Correct the inability to style clickable types in iOS and Safari. */
button, html [type="button"], [type="reset"], [type="submit"] { -webkit-appearance: button; /* 2 */ }

/** Remove the inner border and padding in Firefox. */
button::-moz-focus-inner, [type="button"]::-moz-focus-inner, [type="reset"]::-moz-focus-inner, [type="submit"]::-moz-focus-inner { border-style: none; padding: 0; }

/** Restore the focus styles unset by the previous rule. */
button:-moz-focusring, [type="button"]:-moz-focusring, [type="reset"]:-moz-focusring, [type="submit"]:-moz-focusring { outline: 1px dotted ButtonText; }

/** Change the border, margin, and padding in all browsers (opinionated). */
fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; }

/** 1. Correct the text wrapping in Edge and IE. 2. Correct the color inheritance from `fieldset` elements in IE. 3. Remove the padding so developers are not caught out when they zero out `fieldset` elements in all browsers. */
legend { box-sizing: border-box; /* 1 */ color: inherit; /* 2 */ display: table; /* 1 */ max-width: 100%; /* 1 */ padding: 0; /* 3 */ white-space: normal; /* 1 */ }

/** 1. Add the correct display in IE 9-. 2. Add the correct vertical alignment in Chrome, Firefox, and Opera. */
progress { display: inline-block; /* 1 */ vertical-align: baseline; /* 2 */ }

/** Remove the default vertical scrollbar in IE. */
textarea { overflow: auto; }

/** 1. Add the correct box sizing in IE 10-. 2. Remove the padding in IE 10-. */
[type="checkbox"], [type="radio"] { box-sizing: border-box; /* 1 */ padding: 0; /* 2 */ }

/** Correct the cursor style of increment and decrement buttons in Chrome. */
[type="number"]::-webkit-inner-spin-button, [type="number"]::-webkit-outer-spin-button { height: auto; }

/** 1. Correct the odd appearance in Chrome and Safari. 2. Correct the outline style in Safari. */
[type="search"] { -webkit-appearance: textfield; /* 1 */ outline-offset: -2px; /* 2 */ }

/** Remove the inner padding and cancel buttons in Chrome and Safari on macOS. */
[type="search"]::-webkit-search-cancel-button, [type="search"]::-webkit-search-decoration { -webkit-appearance: none; }

/** 1. Correct the inability to style clickable types in iOS and Safari. 2. Change font properties to `inherit` in Safari. */
::-webkit-file-upload-button { -webkit-appearance: button; /* 1 */ font: inherit; /* 2 */ }

/* Interactive ========================================================================== */
/* Add the correct display in IE 9-. 1. Add the correct display in Edge, IE, and Firefox. */
details, menu { display: block; }

/* Add the correct display in all browsers. */
summary { display: list-item; }

/* Scripting ========================================================================== */
/** Add the correct display in IE 9-. */
canvas { display: inline-block; }

/** Add the correct display in IE. */
template { display: none; }

/* Hidden ========================================================================== */
/** Add the correct display in IE 10-. */
[hidden] { display: none; }

html { box-sizing: border-box; -o-box-sizing: border-box; -ms-box-sizing: border-box; font-size: 62.5%; color: #000; -ms-overflow-style: scrollbar; -webkit-tap-highlight-color: transparent; }

*, *:before, *:after { box-sizing: inherit; }

body { font-size: 1.3rem; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; }

a { color: #0096D9; text-decoration: none; }

a:hover, a:focus { text-decoration: underline; }

code, kbd, pre, samp { background-color: #F2F2F2; padding: .1em .5em; border-radius: .1em; }

blockquote { padding: 10px; margin: 0 0 20px; font-size: 1.6rem; border-left: 5px solid #eee; }

textarea { resize: none; }

.site__main { *zoom: 1; }

.site__main:before, .site__main:after { display: table; content: ' '; }

.site__main:after { clear: both; }

.main__row, .content__wrapper { *zoom: 1; margin: 0 auto; max-width: 92.308em; }

.main__row:before, .content__wrapper:before, .main__row:after, .content__wrapper:after { display: table; content: ' '; }

.main__row:after, .content__wrapper:after { clear: both; }

.main__nav { float: left; width: 100%; }

@media only screen and (min-width: 768px) { .main__nav { width: 16.66667%; } }

.content__col-sm { float: left; width: 100%; }

@media only screen and (min-width: 768px) { .content__col-sm { width: 33.33333%; } }

.content__col-lg { float: left; width: 100%; }

@media only screen and (min-width: 768px) { .content__col-lg { width: 66.66667%; } }

.main__content { float: left; width: 100%; }

@media only screen and (min-width: 768px) { .main__content { width: 83.33333%; } }

@-webkit-keyframes animatetop { from { top: -300px;
    opacity: 0; }
  to { top: 0;
    opacity: 1; } }

@keyframes animatetop { from { top: -300px;
    opacity: 0; }
  to { top: 0;
    opacity: 1; } }

/*
-- SITE BLOCK --
* every block should in seperate file 
* for demo I combine into one file
*/
.site { margin: 0; }

.site__main { margin-top: 60px; }

/*
-- MAIN BLOCK --
*/
.main__jumbotron { width: 100%; height: 500px; background-color: #0096D9; }

.main__jumbotron h1 { color: #fff; font-style: italic; font-size: 5rem; }

.main__jumbotron h2 { color: #fff; font-style: italic; font-weight: normal; }

.main__jumbotron-wrapper { margin: 0 auto; padding-top: 10em; padding-left: 3em; }

@media screen and (max-width: 640px) { .main__nav { display: none; } }

.main__content { padding: 20px; }

/*
-- HEADER BLOCK --
*/
.header { box-shadow: 0 1px 2px rgba(0, 0, 0, 0.075); position: fixed; top: 0; z-index: 100; width: 100%; height: 60px; background: rgba(255, 255, 255, 0.95294); }

.header__wrapper { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: justify; -ms-flex-pack: justify; justify-content: space-between; -webkit-box-align: center; -ms-flex-align: center; align-items: center; }

.header__brand { display: -webkit-box; display: -ms-flexbox; display: flex; -webkit-box-pack: justify; -ms-flex-pack: justify; justify-content: space-between; -webkit-box-align: center; -ms-flex-align: center; align-items: center; margin: .2em; }

.header__brand img { height: 45px; }

.header__title { font-style: italic; font-size: 1.8rem; font-weight: 500; margin-left: .5em; }

.header__nav { margin-right: 2em; }

.header__nav a { color: #1a1a1a; text-decoration: none; font-size: 1.2rem; }

.header__nav a:hover { color: black; }

@media screen and (max-width: 640px) { .header__nav { display: none; } }

/*
-- NAVIGATION BLOCK --
*/
/*
-- CONTENT BLOCK --
*/
.content__title { padding: 7px 0; border-bottom: 1px solid #999; }

.content__wrapper { padding: 10px 0; }

/*
-- GRID BLOCK --
*/
.grid__flex, .grid__row { margin: 2px 0; }

.grid__item { width: 100%; padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-1 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-2 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-3 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-4 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-5 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-6 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-7 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-8 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-9 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-10 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-11 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__col-12 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-1 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-2 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-3 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-4 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-5 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-6 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-7 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-8 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-9 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-10 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-11 { padding: 1em 0; border: 1px solid #999; text-align: center; }

.grid__offset-12 { padding: 1em 0; border: 1px solid #999; text-align: center; }

/*
-- FOR DEMO ONLY --
*/
.button { margin: .1em; }

.popover { text-align: center; padding: 1em 0; border: 1px solid #999; }

.card { display: inline-block; width: 25%; margin: 1em 0 0 1em; height: 150px; }

/*
-- FOOTER BLOCK --
*/
.footer { margin: 0 auto; padding: 20px 0; background: #0096D9; color: #fff; }

.footer__wrapper { text-align: center; }

.footer__text { font-size: .9rem; }

.footer__list { display: block; margin: 0; padding: 0; list-style: none; }

.footer__icon { display: inline-block; margin: 0 5px; font-size: 1.6rem; }

.footer__icon i { color: #fff; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGVtby5jc3MiLCJzb3VyY2VzIjpbImRlbW8uc2NzcyIsIl9iZW0ta2l0LnNjc3MiLCJfc2Nzcy9taXhpbnMvX2FwcGVhcmFuY2Uuc2NzcyIsIl9zY3NzL21peGlucy9fYmFja2dyb3VuZC5zY3NzIiwiX3Njc3MvbWl4aW5zL19ib3JkZXItcmFkaXVzLnNjc3MiLCJfc2Nzcy9taXhpbnMvX2JveGVzLnNjc3MiLCJfc2Nzcy9taXhpbnMvX2NsZWFyZml4LnNjc3MiLCJfc2Nzcy9taXhpbnMvX2ltYWdlLnNjc3MiLCJfc2Nzcy9taXhpbnMvX3BsYWNlaG9sZGVycy5zY3NzIiwiX3Njc3MvbWl4aW5zL190cmFuc2l0aW9ucy5zY3NzIiwiX3Njc3MvaGVscGVycy9fY29sb3JzLnNjc3MiLCJfc2Nzcy9oZWxwZXJzL19saXN0LnNjc3MiLCJfc2Nzcy9fbm9ybWFsaXplLnNjc3MiLCJfc2Nzcy9fYmFzZS5zY3NzIiwiX3Njc3MvX2NvbXBvbmVudHMvX2dyaWRzLnNjc3MiLCJfc2Nzcy9fY29tcG9uZW50cy9fYnV0dG9ucy5zY3NzIiwiX3Njc3MvX2NvbXBvbmVudHMvX2NoZWNrYm94ZXMuc2NzcyIsIl9zY3NzL19jb21wb25lbnRzL19yYWRpb3Muc2NzcyIsIl9zY3NzL19jb21wb25lbnRzL190YWJzLnNjc3MiLCJfc2Nzcy9fY29tcG9uZW50cy9fdGV4dGZpZWxkLnNjc3MiLCJfc2Nzcy9fY29tcG9uZW50cy9fc2VsZWN0LnNjc3MiLCJfc2Nzcy9fY29tcG9uZW50cy9fdGFibGUuc2NzcyIsIl9zY3NzL19jb21wb25lbnRzL19wYWdlci5zY3NzIiwiX3Njc3MvX2NvbXBvbmVudHMvX2FsZXJ0LnNjc3MiLCJfc2Nzcy9fY29tcG9uZW50cy9fY2FyZC5zY3NzIiwiX3Njc3MvX2NvbXBvbmVudHMvX3BvcG92ZXIuc2NzcyIsIl9zY3NzL19jb21wb25lbnRzL19tb2RhbC5zY3NzIiwiX3Njc3MvX2NvbXBvbmVudHMvX2Zvcm0uc2NzcyJdLCJzb3VyY2VzQ29udGVudCI6WyJAaW1wb3J0IFwiX2JlbS1raXRcIjtcclxuXHJcbi8qXHJcbi0tIFNJVEUgQkxPQ0sgLS1cclxuKiBldmVyeSBibG9jayBzaG91bGQgaW4gc2VwZXJhdGUgZmlsZSBcclxuKiBmb3IgZGVtbyBJIGNvbWJpbmUgaW50byBvbmUgZmlsZVxyXG4qL1xyXG4uc2l0ZVxyXG57XHJcbiAgICBtYXJnaW46IDA7XHJcblxyXG4gICAgJl9fbWFpblxyXG4gICAge1xyXG4gICAgICAgIG1hcmdpbi10b3A6IDYwcHg7XHJcbiAgICAgICAgQGV4dGVuZCAlY2xlYXJmaXg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qXHJcbi0tIE1BSU4gQkxPQ0sgLS1cclxuKi9cclxuLm1haW5cclxue1xyXG4gICAgJl9fanVtYm90cm9ue1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIGhlaWdodDogNTAwcHg7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XHJcblxyXG4gICAgICAgIGgxe1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljOyAgXHJcbiAgICAgICAgICAgIGZvbnQtc2l6ZTogNXJlbTsgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGgye1xyXG4gICAgICAgICAgICBjb2xvcjogI2ZmZjtcclxuICAgICAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgICAgICBmb250LXdlaWdodDogbm9ybWFsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi13cmFwcGVye1xyXG4gICAgICAgICAgICBtYXJnaW46IDAgYXV0bzsgICAgXHJcbiAgICAgICAgICAgIHBhZGRpbmctdG9wOiAxMGVtO1xyXG4gICAgICAgICAgICBwYWRkaW5nLWxlZnQ6IDNlbTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblx0Jl9fcm93e1xyXG5cdFx0QGV4dGVuZCAlcm93O1xyXG5cdH1cclxuICAgICZfX25hdlxyXG4gICAge1xyXG4gICAgXHRAZXh0ZW5kICVjb2wtMjtcclxuXHJcbiAgICAgICAgQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDo2NDBweClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fY29udGVudFxyXG4gICAge1xyXG4gICAgXHRAZXh0ZW5kICVjb2wtMTA7XHJcbiAgICBcdHBhZGRpbmc6IDIwcHg7XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qXHJcbi0tIEhFQURFUiBCTE9DSyAtLVxyXG4qL1xyXG5cclxuLmhlYWRlclxyXG57XHJcbiAgICBAaW5jbHVkZSBib3gtc2hhZG93KDAgMXB4IDJweCByZ2JhKDAsMCwwLDAuMDc1KSk7XHJcblxyXG4gICAgcG9zaXRpb246IGZpeGVkO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgei1pbmRleDogMTAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDYwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwyNTUsMjU1LC45NTI5NCk7XHJcblxyXG4gICAgJl9fd3JhcHBlcntcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgfVxyXG4gICAgJl9fYnJhbmRcclxuICAgIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcclxuICAgICAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAgICAgIG1hcmdpbjogLjJlbTtcclxuXHJcbiAgICAgICAgaW1nXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDQ1cHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fdGl0bGV7XHJcbiAgICAgICAgZm9udC1zdHlsZTogaXRhbGljO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS44cmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgICAgICAgbWFyZ2luLWxlZnQ6IC41ZW07XHJcbiAgICB9XHJcbiAgICAmX19uYXZcclxuICAgIHtcclxuICAgICAgICBtYXJnaW4tcmlnaHQ6IDJlbTtcclxuICAgICAgICBhXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjb2xvcjogJGJsYWNrTGlnaHQ7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgZm9udC1zaXplOiAxLjJyZW07XHJcblxyXG4gICAgICAgICAgICAmOmhvdmVyXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2tEYXJrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBAbWVkaWEgc2NyZWVuIGFuZCAobWF4LXdpZHRoOjY0MHB4KVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgZGlzcGxheTogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbi8qXHJcbi0tIE5BVklHQVRJT04gQkxPQ0sgLS1cclxuKi9cclxuLm5hdntcclxuXHQmX190YWJze1xyXG5cdFx0QGV4dGVuZCAldGFicztcclxuXHR9XHJcbn1cclxuXHJcblxyXG5cclxuLypcclxuLS0gQ09OVEVOVCBCTE9DSyAtLVxyXG4qL1xyXG4uY29udGVudHtcclxuXHQmX190aXRsZXtcclxuXHRcdHBhZGRpbmc6IDdweCAwO1xyXG5cdFx0Ym9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmV5O1xyXG5cdH1cclxuXHQmX193cmFwcGVye1xyXG5cdFx0QGV4dGVuZCAlcm93O1xyXG5cdFx0cGFkZGluZzogMTBweCAwO1xyXG5cdH1cclxuXHQmX19jb2wtc217XHJcblx0XHRAZXh0ZW5kICVjb2wtNDtcclxuXHR9XHJcblx0Jl9fY29sLWxne1xyXG5cdFx0QGV4dGVuZCAlY29sLTg7XHJcblx0fVxyXG59XHJcblxyXG5cclxuLypcclxuLS0gR1JJRCBCTE9DSyAtLVxyXG4qL1xyXG4uZ3JpZHtcclxuICAgICZfX2ZsZXgsICZfX3Jvd3tcclxuICAgICAgICBtYXJnaW46IDJweCAwO1xyXG4gICAgfVxyXG4gICAgJl9faXRlbXtcclxuICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICBwYWRkaW5nOiAxZW0gMDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JleTtcclxuICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICB9XHJcbiAgICBcclxuICAgICRjb2x1bW5Db3VudCA6IDE2ICFkZWZhdWx0O1xyXG4gICAgJGJyZWFrLW1lZGl1bTogNjMuNzUwZW07XHJcblxyXG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkY29sdW1uQ291bnQge1xyXG4gICAgICAgICZfX2NvbC0jeyRpfXtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmV5O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkY29sdW1uQ291bnQge1xyXG4gICAgICAgICZfX29mZnNldC0jeyRpfXtcclxuICAgICAgICAgICAgcGFkZGluZzogMWVtIDA7XHJcbiAgICAgICAgICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmV5O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcblxyXG4vKlxyXG4tLSBGT1IgREVNTyBPTkxZIC0tXHJcbiovXHJcbi5idXR0b257XHJcbiAgICBtYXJnaW46IC4xZW07XHJcbn1cclxuXHJcbi5wb3BvdmVye1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG4gICAgcGFkZGluZzogMWVtIDA7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JleTtcclxufVxyXG5cclxuLmNhcmR7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogMjUlOyAgICBcclxuICAgIG1hcmdpbjogMWVtIDAgMCAxZW07XHJcbiAgICBoZWlnaHQ6IDE1MHB4O1xyXG59XHJcblxyXG4vKlxyXG4tLSBGT09URVIgQkxPQ0sgLS1cclxuKi9cclxuLmZvb3RlclxyXG57XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxuICAgIHBhZGRpbmc6IDIwcHggMDtcclxuICAgIGJhY2tncm91bmQ6ICRibHVlO1xyXG4gICAgY29sb3I6ICNmZmY7XHJcblxyXG4gICAgJl9fd3JhcHBlclxyXG4gICAge1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuICAgICZfX3RleHRcclxuICAgIHtcclxuICAgICAgICBmb250LXNpemU6IC45cmVtO1xyXG4gICAgfVxyXG4gICAgJl9fbGlzdFxyXG4gICAge1xyXG4gICAgICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgICAgIG1hcmdpbjogMDtcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIGxpc3Qtc3R5bGU6IG5vbmU7XHJcbiAgICB9XHJcbiAgICAmX19pY29uXHJcbiAgICB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIG1hcmdpbjogMCA1cHg7XHJcbiAgICAgICAgZm9udC1zaXplOiAxLjZyZW07XHJcblxyXG4gICAgICAgIGlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjZmZmO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJcclxuQGltcG9ydCBcIl9zY3NzL21peGlucy9hcHBlYXJhbmNlXCI7XHJcbkBpbXBvcnQgXCJfc2Nzcy9taXhpbnMvYmFja2dyb3VuZFwiO1xyXG5AaW1wb3J0IFwiX3Njc3MvbWl4aW5zL2JvcmRlci1yYWRpdXNcIjtcclxuQGltcG9ydCBcIl9zY3NzL21peGlucy9ib3hlc1wiO1xyXG5AaW1wb3J0IFwiX3Njc3MvbWl4aW5zL2NsZWFyZml4XCI7XHJcbkBpbXBvcnQgXCJfc2Nzcy9taXhpbnMvaW1hZ2VcIjtcclxuQGltcG9ydCBcIl9zY3NzL21peGlucy9wbGFjZWhvbGRlcnNcIjtcclxuQGltcG9ydCBcIl9zY3NzL21peGlucy90cmFuc2l0aW9uc1wiO1xyXG5cclxuLy8gSEVMUEVSXHJcbkBpbXBvcnQgXCJfc2Nzcy9oZWxwZXJzL2NvbG9yc1wiO1xyXG5AaW1wb3J0IFwiX3Njc3MvaGVscGVycy9saXN0XCI7XHJcblxyXG4vLyBCQVNFXHJcbkBpbXBvcnQgXCJfc2Nzcy9ub3JtYWxpemVcIjtcclxuQGltcG9ydCBcIl9zY3NzL2Jhc2VcIjtcclxuXHJcbi8vIENPTVBPTkVOVFxyXG5AaW1wb3J0IFwiX3Njc3MvX2NvbXBvbmVudHMvZ3JpZHNcIjtcclxuQGltcG9ydCBcIl9zY3NzL19jb21wb25lbnRzL2J1dHRvbnNcIjtcclxuQGltcG9ydCBcIl9zY3NzL19jb21wb25lbnRzL2NoZWNrYm94ZXNcIjtcclxuQGltcG9ydCBcIl9zY3NzL19jb21wb25lbnRzL3JhZGlvc1wiO1xyXG5AaW1wb3J0IFwiX3Njc3MvX2NvbXBvbmVudHMvdGFic1wiO1xyXG5AaW1wb3J0IFwiX3Njc3MvX2NvbXBvbmVudHMvdGV4dGZpZWxkXCI7XHJcbkBpbXBvcnQgXCJfc2Nzcy9fY29tcG9uZW50cy9zZWxlY3RcIjtcclxuQGltcG9ydCBcIl9zY3NzL19jb21wb25lbnRzL3RhYmxlXCI7XHJcbkBpbXBvcnQgXCJfc2Nzcy9fY29tcG9uZW50cy9wYWdlclwiO1xyXG5AaW1wb3J0IFwiX3Njc3MvX2NvbXBvbmVudHMvYWxlcnRcIjtcclxuQGltcG9ydCBcIl9zY3NzL19jb21wb25lbnRzL2NhcmRcIjtcclxuQGltcG9ydCBcIl9zY3NzL19jb21wb25lbnRzL3BvcG92ZXJcIjtcclxuQGltcG9ydCBcIl9zY3NzL19jb21wb25lbnRzL21vZGFsXCI7XHJcbkBpbXBvcnQgXCJfc2Nzcy9fY29tcG9uZW50cy9mb3JtXCI7IiwiXHJcblxyXG5AbWl4aW4gYXBwZWFyYW5jZSgkcGFyYW0pXHJcbntcclxuICAtd2Via2l0LWFwcGVhcmFuY2UgOiAkcGFyYW07XHJcbiAgLW1vei1hcHBlYXJhbmNlIDogJHBhcmFtO1xyXG4gIGFwcGVhcmFuY2UgOiAkcGFyYW07XHJcbn1cclxuIiwiLy8gQmFja2dyb3VuZCBTaXplXHJcbkBtaXhpbiBiYWNrZ3JvdW5kLXNpemUoJHNpemUpXHJcbntcclxuICAgIC13ZWJraXQtYmFja2dyb3VuZC1zaXplOiAkc2l6ZTtcclxuICAgICAgIC1tb3otYmFja2dyb3VuZC1zaXplOiAkc2l6ZTtcclxuICAgICAgICAgLW8tYmFja2dyb3VuZC1zaXplOiAkc2l6ZTtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1zaXplOiAkc2l6ZTtcclxufVxyXG4iLCIvLyBCb3JkZXIgUmFkaXVzXHJcbkBtaXhpbiBib3JkZXItcmFkaXVzKCRyYWRpdXMpXHJcbntcclxuICAgIC13ZWJraXQtYm9yZGVyLXJhZGl1czogJHJhZGl1cztcclxuICAgICAgIC1tb3otYm9yZGVyLXJhZGl1czogJHJhZGl1cztcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogJHJhZGl1cztcclxufVxyXG5cclxuQG1peGluIGJvcmRlci10b3AtcmFkaXVzKCRyYWRpdXMpIHtcclxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6ICRyYWRpdXM7XHJcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogJHJhZGl1cztcclxufVxyXG5cclxuQG1peGluIGJvcmRlci1yaWdodC1yYWRpdXMoJHJhZGl1cykge1xyXG4gICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6ICRyYWRpdXM7XHJcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogJHJhZGl1cztcclxufVxyXG5cclxuQG1peGluIGJvcmRlci1ib3R0b20tcmFkaXVzKCRyYWRpdXMpIHtcclxuICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAkcmFkaXVzO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHJhZGl1cztcclxufVxyXG5cclxuQG1peGluIGJvcmRlci1sZWZ0LXJhZGl1cygkcmFkaXVzKSB7XHJcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAkcmFkaXVzO1xyXG4gICAgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogJHJhZGl1cztcclxufSIsIi8vIERyb3AgU2hhZG93XHJcbkBtaXhpbiBib3gtc2hhZG93KCRzaGFkb3cuLi4pXHJcbntcclxuICAgIC13ZWJraXQtYm94LXNoYWRvdzogJHNoYWRvdztcclxuICAgICAgIC1tb3otYm94LXNoYWRvdzogJHNoYWRvdztcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogJHNoYWRvdztcclxufVxyXG5cclxuLy8gQm94IFNpemluZ1xyXG5AbWl4aW4gYm94LXNpemluZygkYm94LXNpemUpXHJcbntcclxuICAgIC13ZWJraXQtYm94LXNpemluZzogJGJveC1zaXplO1xyXG4gICAgICAgLW1vei1ib3gtc2l6aW5nOiAkYm94LXNpemU7XHJcbiAgICAgICAgICAgIGJveC1zaXppbmc6ICRib3gtc2l6ZTtcclxuXHJcbiAgICAgICAgIC1vLWJveC1zaXppbmc6ICRib3gtc2l6ZTtcclxuICAgICAgICAtbXMtYm94LXNpemluZzogJGJveC1zaXplO1xyXG59XHJcbiIsIkBtaXhpbiBjbGVhcmZpeCgpXHJcbntcclxuICAgICp6b29tOiAxO1xyXG4gICAgJjpiZWZvcmUsXHJcbiAgICAmOmFmdGVyXHJcbiAgICB7XHJcbiAgICAgICAgZGlzcGxheTogdGFibGU7XHJcbiAgICAgICAgY29udGVudDogJyAnO1xyXG4gICAgfVxyXG4gICAgJjphZnRlclxyXG4gICAge1xyXG4gICAgICAgIGNsZWFyOiBib3RoO1xyXG4gICAgfVxyXG59XHJcblxyXG5AbWl4aW4gcm93KClcclxueyAgICBcclxuICAgIEBpbmNsdWRlIGNsZWFyZml4KCk7IFxyXG4gICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICBtYXgtd2lkdGg6IDkyLjMwOGVtO1xyXG59XHJcblxyXG5cclxuIiwiLy8gUmVzcG9uc2l2ZSBJbWFnZSBcclxuQG1peGluIGltZy1yZXNwb25zaXZlKCRkaXNwbGF5OiBibG9jaylcclxue1xyXG4gICAgZGlzcGxheTogJGRpc3BsYXk7XHJcblxyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcbiIsIi8vIFBsYWNlaG9sZGVyIHRleHQgY29sb3JcclxuQG1peGluIHBsYWNlaG9sZGVyLWNvbG9yKCRjb2xvcilcclxue1xyXG4gICAgOjotbW96LXBsYWNlaG9sZGVyXHJcbiAgICB7XHJcbiAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG4gICAgOi1tcy1pbnB1dC1wbGFjZWhvbGRlclxyXG4gICAge1xyXG4gICAgICAgIGNvbG9yOiAkY29sb3I7XHJcbiAgICB9XHJcbiAgICA6Oi13ZWJraXQtaW5wdXQtcGxhY2Vob2xkZXJcclxuICAgIHtcclxuICAgICAgICBjb2xvcjogJGNvbG9yO1xyXG4gICAgfVxyXG59XHJcblxyXG4vLyBQbGFjZWhvbGRlciBwYWRkaW5nXHJcbkBtaXhpbiBwbGFjZWhvbGRlci1wYWRkaW5nKCRwYWRkaW5nKVxyXG57XHJcbiAgICA6Oi1tb3otcGxhY2Vob2xkZXJcclxuICAgIHtcclxuICAgICAgICBwYWRkaW5nOiAkcGFkZGluZztcclxuICAgIH1cclxuICAgIDotbXMtaW5wdXQtcGxhY2Vob2xkZXJcclxuICAgIHtcclxuICAgICAgICBwYWRkaW5nOiAkcGFkZGluZztcclxuICAgIH1cclxuICAgIDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlclxyXG4gICAge1xyXG4gICAgICAgIHBhZGRpbmc6ICRwYWRkaW5nO1xyXG4gICAgfVxyXG59XHJcbiIsIi8vIFRyYW5zZm9ybTogdHJhbnNsYXRlM2RcclxuQG1peGluIHRyYW5zbGF0ZTNkKCR4LCAkeSwgJHopXHJcbntcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUzZCgkeCwgJHksICR6KTtcclxufVxyXG5cclxuLy8gVHJhbnNmb3JtOiB0cmFuc2xhdGUgWFlcclxuQG1peGluIHRyYW5zbGF0ZSgkeCwgJHkpXHJcbntcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcclxuICAgICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGUoJHgsICR5KTtcclxufVxyXG5cclxuLy8gVHJhbnNmb3JtOiB0cmFuc2xhdGUgWFxyXG5AbWl4aW4gdHJhbnNsYXRlWCgkeClcclxue1xyXG4gICAgLXdlYmtpdC10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHgpO1xyXG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHgpO1xyXG4gICAgICAgICAtby10cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHgpO1xyXG4gICAgICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoJHgpO1xyXG59XHJcbi8vIFRyYW5zZm9ybTogdHJhbnNsYXRlIFlcclxuQG1peGluIHRyYW5zbGF0ZVkoJHkpXHJcbntcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR5KTtcclxuICAgICAgICAtbXMtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR5KTtcclxuICAgICAgICAgLW8tdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR5KTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKCR5KTtcclxufVxyXG5cclxuLy8gQmFja2ZhY2UtdmlzaWJpbGl0eVxyXG5AbWl4aW4gYmFja2ZhY2UtdmlzaWJpbGl0eSgkYmFja2ZhY2UpXHJcbntcclxuICAgIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogJGJhY2tmYWNlO1xyXG4gICAgICAgLW1vei1iYWNrZmFjZS12aXNpYmlsaXR5OiAkYmFja2ZhY2U7XHJcbiAgICAgICAgLW1zLWJhY2tmYWNlLXZpc2liaWxpdHk6ICRiYWNrZmFjZTtcclxuICAgICAgICAgLW8tYmFja2ZhY2UtdmlzaWJpbGl0eTogJGJhY2tmYWNlO1xyXG4gICAgICAgICAgICBiYWNrZmFjZS12aXNpYmlsaXR5OiAkYmFja2ZhY2U7XHJcbn1cclxuXHJcbi8vIFRyYW5zZm9ybTogcm90YXRlXHJcbkBtaXhpbiByb3RhdGUoJGRlZ3JlZXMpXHJcbntcclxuICAgIC13ZWJraXQtdHJhbnNmb3JtOiByb3RhdGUoJGRlZ3JlZXMpO1xyXG4gICAgICAgIC1tcy10cmFuc2Zvcm06IHJvdGF0ZSgkZGVncmVlcyk7XHJcbiAgICAgICAgIC1vLXRyYW5zZm9ybTogcm90YXRlKCRkZWdyZWVzKTtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiByb3RhdGUoJGRlZ3JlZXMpO1xyXG59XHJcblxyXG4vLyBUcmFuc2l0aW9uc1xyXG5AbWl4aW4gdHJhbnNpdGlvbigkdHJhbnNpdGlvbi4uLilcclxue1xyXG4gICAgLXdlYmtpdC10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcclxuICAgICAgIC1tb3otdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XHJcbiAgICAgICAgLW1zLXRyYW5zaXRpb246ICR0cmFuc2l0aW9uO1xyXG4gICAgICAgICAtby10cmFuc2l0aW9uOiAkdHJhbnNpdGlvbjtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogJHRyYW5zaXRpb247XHJcbn1cclxuXHJcbi8vIFRyYW5zaXRpb24gRGVsYXlcclxuQG1peGluIHRyYW5zaXRpb24tZGVsYXkoJHRyYW5zaXRpb24tZGVsYXkpXHJcbntcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbi1kZWxheTogJHRyYW5zaXRpb24tZGVsYXk7XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb24tZGVsYXk6ICR0cmFuc2l0aW9uLWRlbGF5O1xyXG59XHJcblxyXG4vLyBUcmFuc2l0aW9ucyA6IHRyYW5zZm9ybVxyXG5AbWl4aW4gdHJhbnNpdGlvbi10cmFuc2Zvcm0oJHRyYW5zaXRpb24uLi4pXHJcbntcclxuICAgIC13ZWJraXQtdHJhbnNpdGlvbjogLXdlYmtpdC10cmFuc2Zvcm0gJHRyYW5zaXRpb247XHJcbiAgICAgICAtbW96LXRyYW5zaXRpb246ICAgIC1tb3otdHJhbnNmb3JtICR0cmFuc2l0aW9uO1xyXG4gICAgICAgICAtby10cmFuc2l0aW9uOiAgICAgIC1vLXRyYW5zZm9ybSAkdHJhbnNpdGlvbjtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogICAgICAgICB0cmFuc2Zvcm0gJHRyYW5zaXRpb247XHJcbn1cclxuIiwiXHJcbi8vIHByaW1hcnkgY29sb3JcclxuJHdoaXRlIFx0XHRcdDogI2ZmZiAhZGVmYXVsdDtcclxuJGJsYWNrIFx0XHRcdDogIzAwMCAhZGVmYXVsdDtcclxuJGdyZXkgICAgICAgICAgIDogIzk5OSAhZGVmYXVsdDtcclxuJHJlZFx0XHRcdDogI0Y4MDExRSAhZGVmYXVsdDtcclxuJGdyZWVuXHRcdFx0OiAjMDBCMzVFICFkZWZhdWx0O1xyXG4kbGltZVx0XHRcdDogIzg5Qzc0NyAhZGVmYXVsdDtcclxuJGJsdWUgXHRcdFx0OiAjMDA5NkQ5ICFkZWZhdWx0O1xyXG4keWVsbG93XHRcdCAgICA6ICNmZjk3MDAgIWRlZmF1bHQ7XHJcbiRvcmFuZ2VcdFx0XHQ6ICNGNzkzMUUgIWRlZmF1bHQ7XHJcbiRicm93biBcdFx0ICAgIDogIzZBNDUzQyAhZGVmYXVsdDtcclxuJG1hZ2VudGFcdFx0OiAjRjUwMDg5ICFkZWZhdWx0O1xyXG5cclxuLy8gc29jaWFsIG1lZGlhXHJcbiRmYWNlYm9vay1jb2xvciAgICAgOiAjNEM2NkE0O1xyXG4kZ29vZ2xlcGx1cy1jb2xvciAgIDogI0RENEIzOTtcclxuJHBpbnRlcmVzdC1jb2xvciAgICA6ICNDQjIwMjc7XHJcbiR0d2l0dGVyLWNvbG9yICAgICAgOiAjMkZDMkVGO1xyXG4keW91dHViZS1jb2xvciAgICAgIDogI0NEMjAxRjtcclxuJGluc3RhZ3JhbS1jb2xvciAgICA6ICMyNjI2MjY7XHJcblxyXG4vLyBzZWNvbmRhcnkgY29sb3JcclxuJGJsYWNrRGFyayBcdCAgICAgICAgOiBkYXJrZW4oJGJsYWNrLDEwJSkgIWRlZmF1bHQ7XHJcbiRibGFja0RhcmtlciAgICAgICAgOiBkYXJrZW4oJGJsYWNrLDIwJSkgIWRlZmF1bHQ7XHJcbiRibGFja0xpZ2h0ICAgICAgICAgOiBsaWdodGVuKCRibGFjaywxMCUpICFkZWZhdWx0O1xyXG4kYmxhY2tMaWdodGVyICAgICAgIDogbGlnaHRlbigkYmxhY2ssMjAlKSAhZGVmYXVsdDtcclxuXHJcbiRibHVlRGFya1x0ICAgICAgICA6IGRhcmtlbigkYmx1ZSwxMCUpICFkZWZhdWx0O1xyXG4kYmx1ZURhcmtlclx0ICAgICAgICA6IGRhcmtlbigkYmx1ZSwyMCUpICFkZWZhdWx0O1xyXG4kYmx1ZUxpZ2h0XHQgICAgICAgIDogbGlnaHRlbigkYmx1ZSwxMCUpICFkZWZhdWx0O1xyXG4kYmx1ZUxpZ2h0ZXIgICAgICAgIDogbGlnaHRlbigkYmx1ZSwyMCUpICFkZWZhdWx0O1xyXG5cclxuJGdyZWVuRGFya1x0ICAgICAgICA6IGRhcmtlbigkZ3JlZW4sMTAlKSAhZGVmYXVsdDtcclxuJGdyZWVuRGFya2VyICAgICAgICA6IGRhcmtlbigkZ3JlZW4sMjAlKSAhZGVmYXVsdDtcclxuJGdyZWVuTGlnaHRcdCAgICAgICAgOiBsaWdodGVuKCRncmVlbiwxMCUpICFkZWZhdWx0O1xyXG4kZ3JlZW5MaWdodGVyICAgICAgIDogbGlnaHRlbigkZ3JlZW4sMjAlKSAhZGVmYXVsdDtcclxuXHJcbiRncmV5RGFyayBcdCAgICAgICAgOiAjMzMzICFkZWZhdWx0O1xyXG4kZ3JleURhcmtlciAgICAgICAgIDogIzY2NiAhZGVmYXVsdDtcclxuJGdyZXlMaWdodCBcdCAgICAgICAgOiAjQ0NDICFkZWZhdWx0O1xyXG4kZ3JleUxpZ2h0ZXIgICAgICAgIDogI0YyRjJGMiAhZGVmYXVsdDtcclxuXHJcbiRvcmFuZ2VEYXJrICAgICAgICAgOiBkYXJrZW4oJG9yYW5nZSwxMCUpICFkZWZhdWx0O1xyXG4kb3JhbmdlRGFya2VyICAgICAgIDogZGFya2VuKCRvcmFuZ2UsMjAlKSAhZGVmYXVsdDtcclxuJG9yYW5nZUxpZ2h0ICAgICAgICA6IGxpZ2h0ZW4oJG9yYW5nZSwxMCUpICFkZWZhdWx0O1xyXG4kb3JhbmdlTGlnaHRlciAgICAgIDogbGlnaHRlbigkb3JhbmdlLDIwJSkgIWRlZmF1bHQ7XHJcblxyXG4kcmVkRGFyayBcdCAgICAgICAgOiBkYXJrZW4oJHJlZCwxMCUpICFkZWZhdWx0O1xyXG4kcmVkRGFya2VyIFx0ICAgICAgICA6IGRhcmtlbigkcmVkLDIwJSkgIWRlZmF1bHQ7XHJcbiRyZWRMaWdodCBcdCAgICAgICAgOiBsaWdodGVuKCRyZWQsMTAlKSAhZGVmYXVsdDtcclxuJHJlZExpZ2h0ZXIgICAgICAgICA6IGxpZ2h0ZW4oJHJlZCwyMCUpICFkZWZhdWx0O1xyXG5cclxuJGJyb3duRGFyayBcdCAgICAgICAgOiBkYXJrZW4oJGJyb3duLDEwJSkgIWRlZmF1bHQ7XHJcbiRicm93bkRhcmtlciAgICAgICAgOiBkYXJrZW4oJGJyb3duLDIwJSkgIWRlZmF1bHQ7XHJcbiRicm93bkxpZ2h0XHQgICAgICAgIDogbGlnaHRlbigkYnJvd24sMTAlKSAhZGVmYXVsdDtcclxuJGJyb3duTGlnaHRlciAgICAgICA6IGxpZ2h0ZW4oJGJyb3duLDIwJSkgIWRlZmF1bHQ7XHJcblxyXG4keWVsbG93TGlnaHRlclx0ICAgIDogbGlnaHRlbih5ZWxsb3csMjAlKSAhZGVmYXVsdDs7XHJcblxyXG4kYnV0dG9uVmFyaWFuc05hbWUgIDogZ3JlZW4sIHJlZCwgYmx1ZSwgb3JhbmdlLCBncmF5LCB3aGl0ZTtcclxuJGJ1dHRvblZhcmlhbnNIZXggICA6ICRncmVlbiwgJHJlZCwgJGJsdWUsICRvcmFuZ2UsICRncmV5LCAkd2hpdGU7XHJcbiRidXR0b25WYXJpYW5zSG92ZXIgOiAkZ3JlZW5MaWdodCwgJHJlZExpZ2h0LCAkYmx1ZUxpZ2h0LCAkb3JhbmdlTGlnaHQsICRncmV5TGlnaHQsICR3aGl0ZTtcclxuJGJ1dHRvblZhcmlhbnNGb250ICA6ICR3aGl0ZSwgJHdoaXRlLCAkd2hpdGUsICR3aGl0ZSwgJGJsYWNrLCAkYmxhY2s7IiwiJXJlc2V0LWxpc3Qge1xyXG5cdG1hcmdpbjogMDtcclxuXHRwYWRkaW5nOiAwO1xyXG5cdGxpc3Qtc3R5bGU6IG5vbmU7XHJcbn0iLCIvKiEgbm9ybWFsaXplLmNzcyB2NS4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXHJcblxyXG4vKipcclxuICogMS4gQ2hhbmdlIHRoZSBkZWZhdWx0IGZvbnQgZmFtaWx5IGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDMuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cclxuICogICAgSUUgb24gV2luZG93cyBQaG9uZSBhbmQgaW4gaU9TLlxyXG4gKi9cclxuXHJcbi8qIERvY3VtZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG5odG1sIHtcclxuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xyXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAyICovXHJcbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cclxuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cclxufVxyXG5cclxuLyogU2VjdGlvbnNcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXHJcblxyXG5ib2R5IHtcclxuICBtYXJnaW46IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICovXHJcblxyXG5hcnRpY2xlLFxyXG5hc2lkZSxcclxuZm9vdGVyLFxyXG5oZWFkZXIsXHJcbm5hdixcclxuc2VjdGlvbiB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBmb250IHNpemUgYW5kIG1hcmdpbiBvbiBgaDFgIGVsZW1lbnRzIHdpdGhpbiBgc2VjdGlvbmAgYW5kXHJcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXHJcbiAqL1xyXG5cclxuaDEge1xyXG4gIGZvbnQtc2l6ZTogMmVtO1xyXG4gIG1hcmdpbjogMC42N2VtIDA7XHJcbn1cclxuXHJcbi8qIEdyb3VwaW5nIGNvbnRlbnRcclxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xyXG5cclxuZmlnY2FwdGlvbixcclxuZmlndXJlLFxyXG5tYWluIHsgLyogMSAqL1xyXG4gIGRpc3BsYXk6IGJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxyXG4gKi9cclxuXHJcbmZpZ3VyZSB7XHJcbiAgbWFyZ2luOiAxZW0gNDBweDtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXHJcbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxyXG4gKi9cclxuXHJcbmhyIHtcclxuICBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgLyogMSAqL1xyXG4gIGhlaWdodDogMDsgLyogMSAqL1xyXG4gIG92ZXJmbG93OiB2aXNpYmxlOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxucHJlIHtcclxuICBmb250LWZhbWlseTogbW9ub3NwYWNlLCBtb25vc3BhY2U7IC8qIDEgKi9cclxuICBmb250LXNpemU6IDFlbTsgLyogMiAqL1xyXG59XHJcblxyXG4vKiBUZXh0LWxldmVsIHNlbWFudGljc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cclxuICogMi4gUmVtb3ZlIGdhcHMgaW4gbGlua3MgdW5kZXJsaW5lIGluIGlPUyA4KyBhbmQgU2FmYXJpIDgrLlxyXG4gKi9cclxuXHJcbmEge1xyXG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50OyAvKiAxICovXHJcbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogUmVtb3ZlIHRoZSBvdXRsaW5lIG9uIGZvY3VzZWQgbGlua3Mgd2hlbiB0aGV5IGFyZSBhbHNvIGFjdGl2ZSBvciBob3ZlcmVkXHJcbiAqIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxyXG4gKi9cclxuXHJcbmE6YWN0aXZlLFxyXG5hOmhvdmVyIHtcclxuICBvdXRsaW5lLXdpZHRoOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gUmVtb3ZlIHRoZSBib3R0b20gYm9yZGVyIGluIEZpcmVmb3ggMzktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmFiYnJbdGl0bGVdIHtcclxuICBib3JkZXItYm90dG9tOiBub25lOyAvKiAxICovXHJcbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7IC8qIDIgKi9cclxuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgdGhlIGR1cGxpY2F0ZSBhcHBsaWNhdGlvbiBvZiBgYm9sZGVyYCBieSB0aGUgbmV4dCBydWxlIGluIFNhZmFyaSA2LlxyXG4gKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCB3ZWlnaHQgaW4gQ2hyb21lLCBFZGdlLCBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmIsXHJcbnN0cm9uZyB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXHJcbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5jb2RlLFxyXG5rYmQsXHJcbnNhbXAge1xyXG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTsgLyogMSAqL1xyXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZm9udCBzdHlsZSBpbiBBbmRyb2lkIDQuMy0uXHJcbiAqL1xyXG5cclxuZGZuIHtcclxuICBmb250LXN0eWxlOiBpdGFsaWM7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXHJcbiAqL1xyXG5cclxubWFyayB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmMDtcclxuICBjb2xvcjogIzAwMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxyXG4gKi9cclxuXHJcbnNtYWxsIHtcclxuICBmb250LXNpemU6IDgwJTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFByZXZlbnQgYHN1YmAgYW5kIGBzdXBgIGVsZW1lbnRzIGZyb20gYWZmZWN0aW5nIHRoZSBsaW5lIGhlaWdodCBpblxyXG4gKiBhbGwgYnJvd3NlcnMuXHJcbiAqL1xyXG5cclxuc3ViLFxyXG5zdXAge1xyXG4gIGZvbnQtc2l6ZTogNzUlO1xyXG4gIGxpbmUtaGVpZ2h0OiAwO1xyXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7XHJcbn1cclxuXHJcbnN1YiB7XHJcbiAgYm90dG9tOiAtMC4yNWVtO1xyXG59XHJcblxyXG5zdXAge1xyXG4gIHRvcDogLTAuNWVtO1xyXG59XHJcblxyXG4vKiBFbWJlZGRlZCBjb250ZW50XHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXHJcbiAqL1xyXG5cclxuYXVkaW8sXHJcbnZpZGVvIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBpT1MgNC03LlxyXG4gKi9cclxuXHJcbmF1ZGlvOm5vdChbY29udHJvbHNdKSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxuICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBSZW1vdmUgdGhlIGJvcmRlciBvbiBpbWFnZXMgaW5zaWRlIGxpbmtzIGluIElFIDEwLS5cclxuICovXHJcblxyXG5pbWcge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxyXG4gKi9cclxuXHJcbnN2Zzpub3QoOnJvb3QpIHtcclxuICBvdmVyZmxvdzogaGlkZGVuO1xyXG59XHJcblxyXG4vKiBGb3Jtc1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXHJcbiAqIDIuIFJlbW92ZSB0aGUgbWFyZ2luIGluIEZpcmVmb3ggYW5kIFNhZmFyaS5cclxuICovXHJcblxyXG5idXR0b24sXHJcbmlucHV0LFxyXG5vcHRncm91cCxcclxuc2VsZWN0LFxyXG50ZXh0YXJlYSB7XHJcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cclxuICBmb250LXNpemU6IDEwMCU7IC8qIDEgKi9cclxuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMSAqL1xyXG4gIG1hcmdpbjogMDsgLyogMiAqL1xyXG59XHJcblxyXG4vKipcclxuICogU2hvdyB0aGUgb3ZlcmZsb3cgaW4gSUUuXHJcbiAqIDEuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UuXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5pbnB1dCB7IC8qIDEgKi9cclxuICBvdmVyZmxvdzogdmlzaWJsZTtcclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5oZXJpdGFuY2Ugb2YgdGV4dCB0cmFuc2Zvcm0gaW4gRWRnZSwgRmlyZWZveCwgYW5kIElFLlxyXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uLFxyXG5zZWxlY3QgeyAvKiAxICovXHJcbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcclxuICogICAgY29udHJvbHMgaW4gQW5kcm9pZCA0LlxyXG4gKiAyLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKi9cclxuXHJcbmJ1dHRvbixcclxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xyXG5bdHlwZT1cInJlc2V0XCJdLFxyXG5bdHlwZT1cInN1Ym1pdFwiXSB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgYm9yZGVyIGFuZCBwYWRkaW5nIGluIEZpcmVmb3guXHJcbiAqL1xyXG5cclxuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxyXG5bdHlwZT1cImJ1dHRvblwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcclxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xyXG4gIGJvcmRlci1zdHlsZTogbm9uZTtcclxuICBwYWRkaW5nOiAwO1xyXG59XHJcblxyXG4vKipcclxuICogUmVzdG9yZSB0aGUgZm9jdXMgc3R5bGVzIHVuc2V0IGJ5IHRoZSBwcmV2aW91cyBydWxlLlxyXG4gKi9cclxuXHJcbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcclxuW3R5cGU9XCJidXR0b25cIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXHJcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcclxuICBvdXRsaW5lOiAxcHggZG90dGVkIEJ1dHRvblRleHQ7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cclxuICovXHJcblxyXG5maWVsZHNldCB7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcclxuICBtYXJnaW46IDAgMnB4O1xyXG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIENvcnJlY3QgdGhlIHRleHQgd3JhcHBpbmcgaW4gRWRnZSBhbmQgSUUuXHJcbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cclxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxyXG4gKiAgICBgZmllbGRzZXRgIGVsZW1lbnRzIGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5sZWdlbmQge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xyXG4gIGRpc3BsYXk6IHRhYmxlOyAvKiAxICovXHJcbiAgbWF4LXdpZHRoOiAxMDAlOyAvKiAxICovXHJcbiAgcGFkZGluZzogMDsgLyogMyAqL1xyXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7IC8qIDEgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxyXG4gKi9cclxuXHJcbnByb2dyZXNzIHtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IC8qIDEgKi9cclxuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXHJcbiAqL1xyXG5cclxudGV4dGFyZWEge1xyXG4gIG92ZXJmbG93OiBhdXRvO1xyXG59XHJcblxyXG4vKipcclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxyXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxyXG4gKi9cclxuXHJcblt0eXBlPVwiY2hlY2tib3hcIl0sXHJcblt0eXBlPVwicmFkaW9cIl0ge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IC8qIDEgKi9cclxuICBwYWRkaW5nOiAwOyAvKiAyICovXHJcbn1cclxuXHJcbi8qKlxyXG4gKiBDb3JyZWN0IHRoZSBjdXJzb3Igc3R5bGUgb2YgaW5jcmVtZW50IGFuZCBkZWNyZW1lbnQgYnV0dG9ucyBpbiBDaHJvbWUuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXHJcblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LW91dGVyLXNwaW4tYnV0dG9uIHtcclxuICBoZWlnaHQ6IGF1dG87XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBvZGQgYXBwZWFyYW5jZSBpbiBDaHJvbWUgYW5kIFNhZmFyaS5cclxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl0ge1xyXG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXHJcbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7IC8qIDIgKi9cclxufVxyXG5cclxuLyoqXHJcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXHJcbiAqL1xyXG5cclxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWNhbmNlbC1idXR0b24sXHJcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcclxuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XHJcbn1cclxuXHJcbi8qKlxyXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxyXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXHJcbiAqL1xyXG5cclxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XHJcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDEgKi9cclxuICBmb250OiBpbmhlcml0OyAvKiAyICovXHJcbn1cclxuXHJcbi8qIEludGVyYWN0aXZlXHJcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXHJcblxyXG4vKlxyXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cclxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxyXG4gKi9cclxuXHJcbmRldGFpbHMsIC8qIDEgKi9cclxubWVudSB7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbn1cclxuXHJcbi8qXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGFsbCBicm93c2Vycy5cclxuICovXHJcblxyXG5zdW1tYXJ5IHtcclxuICBkaXNwbGF5OiBsaXN0LWl0ZW07XHJcbn1cclxuXHJcbi8qIFNjcmlwdGluZ1xyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxyXG4gKi9cclxuXHJcbmNhbnZhcyB7XHJcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4vKipcclxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXHJcbiAqL1xyXG5cclxudGVtcGxhdGUge1xyXG4gIGRpc3BsYXk6IG5vbmU7XHJcbn1cclxuXHJcbi8qIEhpZGRlblxyXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xyXG5cclxuLyoqXHJcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cclxuICovXHJcblxyXG5baGlkZGVuXSB7XHJcbiAgZGlzcGxheTogbm9uZTtcclxufVxyXG4iLCJodG1sIHtcclxuICAgIEBpbmNsdWRlIGJveC1zaXppbmcoYm9yZGVyLWJveCk7XHJcbiAgICBmb250LXNpemU6IDYyLjUlO1xyXG4gICAgY29sb3I6ICRibGFjaztcclxuICBcdC1tcy1vdmVyZmxvdy1zdHlsZTogc2Nyb2xsYmFyO1xyXG4gIFx0LXdlYmtpdC10YXAtaGlnaGxpZ2h0LWNvbG9yOiB0cmFuc3BhcmVudDtcclxufVxyXG4qLCAqOmJlZm9yZSwgKjphZnRlciB7XHJcbiAgICBib3gtc2l6aW5nOiBpbmhlcml0O1xyXG59XHJcbmJvZHkge1xyXG4gICAgZm9udC1zaXplOiAxLjNyZW07XHJcbiAgICBmb250LWZhbWlseTogLWFwcGxlLXN5c3RlbSwgQmxpbmtNYWNTeXN0ZW1Gb250LCBcIlNlZ29lIFVJXCIsIFJvYm90bywgXCJIZWx2ZXRpY2EgTmV1ZVwiLCBBcmlhbCwgc2Fucy1zZXJpZjtcclxufVxyXG5cclxuYSB7XHJcbiAgY29sb3I6ICRibHVlO1xyXG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbiAgJjpob3ZlciwgJjpmb2N1c3tcclxuICBcdFx0dGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XHJcbiAgfVxyXG59XHJcblxyXG5jb2RlLCBrYmQsIHByZSwgc2FtcCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleUxpZ2h0ZXI7XHJcbiAgICBwYWRkaW5nOiAuMWVtIC41ZW07XHJcbiAgICBib3JkZXItcmFkaXVzOiAuMWVtO1xyXG59XHJcblxyXG5ibG9ja3F1b3Rle1xyXG4gIHBhZGRpbmc6IDEwcHg7XHJcbiAgbWFyZ2luOiAwIDAgMjBweDtcclxuICBmb250LXNpemU6IDEuNnJlbTtcclxuICBib3JkZXItbGVmdDogNXB4IHNvbGlkICNlZWU7XHJcbn1cclxuXHJcbnRleHRhcmVhIHtcclxuICAgcmVzaXplOiBub25lO1xyXG59XHJcbiIsIiVjbGVhcmZpeHtcclxuXHRAaW5jbHVkZSBjbGVhcmZpeCgpO1xyXG59XHJcblxyXG4lcm93IHtcclxuXHRAaW5jbHVkZSBjbGVhcmZpeCgpO1xyXG5cdG1hcmdpbjogMCBhdXRvO1xyXG4gICAgbWF4LXdpZHRoOiA5Mi4zMDhlbTtcclxufVxyXG5cclxuJWZsZXh7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xyXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuJGNvbHVtbkNvdW50IFx0XHQ6IDEyICFkZWZhdWx0O1xyXG4kYnJlYWtQb2ludERlc2t0b3AgXHQ6IDc2OCAhZGVmYXVsdDtcclxuJGJyZWFrUG9pbnRUYWJsZXRcdDogNjAwICFkZWZhdWx0O1xyXG5cclxuQGZvciAkaSBmcm9tIDEgdGhyb3VnaCAkY29sdW1uQ291bnQge1xyXG5cdCVjb2wtI3skaX17XHJcblx0XHRmbG9hdDogbGVmdDtcclxuXHRcdHdpZHRoOiAxMDAlO1xyXG5cclxuXHRcdEBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1pbi13aWR0aDogI3skYnJlYWtQb2ludERlc2t0b3B9cHgpIHtcclxuXHRcdFx0d2lkdGg6ICgoMTAwLyRjb2x1bW5Db3VudCkgKiAkaSkgKjElO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0fVxyXG5cclxuXHQlY29sLW0tI3skaX17XHJcblx0XHRmbG9hdDogbGVmdDtcclxuXHJcblx0XHRAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4td2lkdGg6ICN7JGJyZWFrUG9pbnRUYWJsZXR9cHgpIHtcclxuXHRcdFx0d2lkdGg6ICgoMTAwLyRjb2x1bW5Db3VudCkgKiAkaSkgKjElO1xyXG5cdFx0fVxyXG5cdFx0XHJcblx0fVxyXG5cclxuXHQlb2Zmc2V0LSN7JGl9e1xyXG5cdFx0bWFyZ2luLWxlZnQ6ICgoMTAwLyRjb2x1bW5Db3VudCkgKiAkaSkgKjElO1xyXG5cdH1cclxufVxyXG4iLCIlYnV0dG9uXHJcbntcclxuICAgIFxyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgcGFkZGluZzogMTNweCAyMHB4O1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICBAaW5jbHVkZSBhcHBlYXJhbmNlKG5vbmUpO1xyXG5cclxuICAgICY6aG92ZXIsICY6Zm9jdXMsICY6YWN0aXZlXHJcbiAgICB7XHJcbiAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXJhZGl1c3tcclxuICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKC4yNWVtKTsgICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICBAZm9yICRpIGZyb20gMSB0aHJvdWdoIGxlbmd0aCgkYnV0dG9uVmFyaWFuc05hbWUpIHsgIFxyXG4gICAgICAgICYtLSN7bnRoKCRidXR0b25WYXJpYW5zTmFtZSwgJGkpfSB7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IG50aCgkYnV0dG9uVmFyaWFuc0hleCwgJGkpO1xyXG4gICAgICAgICAgICBjb2xvcjogbnRoKCRidXR0b25WYXJpYW5zRm9udCwgJGkpO1xyXG5cclxuICAgICAgICAgICAgJjpob3ZlclxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kOiBudGgoJGJ1dHRvblZhcmlhbnNIb3ZlciwgJGkpO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6IG50aCgkYnV0dG9uVmFyaWFuc0ZvbnQsICRpKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBAZm9yICRqIGZyb20gMSB0aHJvdWdoIGxlbmd0aCgkYnV0dG9uVmFyaWFuc05hbWUpIHsgIFxyXG4gICAgICAgICYtb3V0bGluZS0tI3tudGgoJGJ1dHRvblZhcmlhbnNOYW1lLCAkail9IHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgbnRoKCRidXR0b25WYXJpYW5zSGV4LCAkaik7IFxyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgXHJcbiAgICAgICAgICAgIGNvbG9yOiBudGgoJGJ1dHRvblZhcmlhbnNIZXgsICRqKTtcclxuXHJcbiAgICAgICAgICAgICY6aG92ZXJcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgbnRoKCRidXR0b25WYXJpYW5zSG92ZXIsICRqKTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBudGgoJGJ1dHRvblZhcmlhbnNIb3ZlciwgJGopO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAmLS1kcm9wZG93bntcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDEycHggMTBweCAwO1xyXG5cclxuICAgICAgICAmOmFmdGVye1xyXG4gICAgICAgICAgICBjb250ZW50OiAnXFwyNUJFJztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAycmVtO1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgICAgICAgICAgIGZsb2F0OiByaWdodDtcclxuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxZW07XHJcbiAgICAgICAgICAgIG1hcmdpbi10b3A6IC02cHg7ICBcclxuICAgICAgICAgICAgaGVpZ2h0OiAwOyAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX21lbnV7XHJcbiAgICAgICAgZGlzcGxheTogbm9uZTsgICAgXHJcbiAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgIHotaW5kZXg6IDI7XHJcbiAgICAgICAgbWluLXdpZHRoOiAxNjBweDtcclxuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JleUxpZ2h0O1xyXG4gICAgICAgIGJhY2tncm91bmQtY29sb3I6ICR3aGl0ZTtcclxuICAgICAgICBtYXJnaW4tdG9wOiAuOGVtO1xyXG4gICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgQGV4dGVuZCAlcmVzZXQtbGlzdDtcclxuXHJcbiAgICAgICAgbGl7XHJcbiAgICAgICAgICAgIGF7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgICAgIHBhZGRpbmc6IDdweCAyMHB4O1xyXG4gICAgICAgICAgICAgICAgY2xlYXI6IGJvdGg7XHJcbiAgICAgICAgICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgICAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgICAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JleUxpZ2h0O1xyXG5cclxuICAgICAgICAgICAgICAgICY6aG92ZXJ7XHJcbiAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZXlMaWdodDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgJjpsYXN0LWNoaWxke1xyXG4gICAgICAgICAgICAgICAgYXtcclxuICAgICAgICAgICAgICAgICAgICBib3JkZXI6IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG59XHJcbiIsIiVjaGVja2JveFxyXG57XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAtOTk5OXB4O1xyXG5cclxuICAgICYgKyBsYWJlbFxyXG4gICAge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICAgICAgcGFkZGluZzogNnB4IDMwcHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICAmOmJlZm9yZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgICAgICAgICB0b3A6IDRweDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgd2lkdGg6IDE4cHg7XHJcbiAgICAgICAgICAgIGhlaWdodDogMThweDtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJGdyZXlMaWdodDtcclxuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogMXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmOmFmdGVyXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgICAgIGNvbnRlbnQ6ICcnO1xyXG5cclxuICAgICAgICAgICAgYm9yZGVyLXRvcDogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkIHRyYW5zcGFyZW50O1xyXG4gICAgICAgICAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCAkd2hpdGU7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkd2hpdGU7XHJcblxyXG4gICAgICAgICAgICBAaW5jbHVkZSByb3RhdGUoMzdkZWcpO1xyXG4gICAgICAgICAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKGJvcmRlciAuMjVzLCBiYWNrZ3JvdW5kLWNvbG9yIC4yNXMpO1xyXG5cclxuICAgICAgICAgICAgLXdlYmtpdC10cmFuc2Zvcm0tb3JpZ2luOiAxMDAlIDEwMCU7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybS1vcmlnaW46IDEwMCUgMTAwJTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAmOm5vdCg6Y2hlY2tlZCkgKyBsYWJlbDphZnRlclxyXG4gICAge1xyXG4gICAgICAgIHdpZHRoOiAwO1xyXG4gICAgICAgIGhlaWdodDogMDtcclxuICAgICAgICB0b3A6IDZweDtcclxuICAgICAgICBsZWZ0OiAxcHg7XHJcbiAgICB9XHJcbiAgICAmOmNoZWNrZWRcclxuICAgIHtcclxuICAgICAgICAmICsgbGFiZWw6YmVmb3JlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICRibHVlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJiArIGxhYmVsOmFmdGVyXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB3aWR0aDogOHB4O1xyXG4gICAgICAgICAgICBoZWlnaHQ6IDEzcHg7XHJcbiAgICAgICAgICAgIHRvcDogNnB4O1xyXG4gICAgICAgICAgICBsZWZ0OiAxcHg7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJjpkaXNhYmxlZFxyXG4gICAge1xyXG4gICAgICAgICYgKyBsYWJlbFxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY29sb3I6ICRncmV5TGlnaHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYgKyBsYWJlbDpiZWZvcmVcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogJGdyZXlMaWdodDtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZXlMaWdodGVyO1xyXG4gICAgICAgICAgICBib3gtc2hhZG93OiBub25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmICsgbGFiZWw6YWZ0ZXJcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIiVyYWRpb1xyXG57XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICBsZWZ0OiAtOTk5OXB4O1xyXG5cclxuICAgICYgKyBsYWJlbFxyXG4gICAge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBwYWRkaW5nOiAxMHB4IDMwcHg7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG5cclxuICAgICAgICAmOmJlZm9yZSxcclxuICAgICAgICAmOmFmdGVyXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICAgICAgICAgIHRvcDogMDtcclxuICAgICAgICAgICAgbGVmdDogMDtcclxuICAgICAgICAgICAgY29sb3I6ICRibGFjaztcclxuICAgICAgICAgICAgZm9udC1zaXplOiAyLjhyZW07XHJcbiAgICAgICAgICAgIHRyYW5zaXRpb246IGFsbCAuMnM7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICY6YmVmb3JlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBjb250ZW50OiAnXFwyNUNFJztcclxuICAgICAgICAgICAgb3BhY2l0eTogMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgJjphZnRlclxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY29udGVudDogJ1xcMjVDOSc7XHJcbiAgICAgICAgICAgIG9wYWNpdHk6IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJjpjaGVja2VkXHJcbiAgICB7XHJcbiAgICAgICAgJiArIGxhYmVsOmJlZm9yZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgb3BhY2l0eTogMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgJiArIGxhYmVsOmFmdGVyXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgICY6ZGlzYWJsZWRcclxuICAgIHtcclxuICAgICAgICAmICsgbGFiZWxcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAjYWFhO1xyXG4gICAgICAgIH1cclxuICAgICAgICAmICsgbGFiZWw6YmVmb3JlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICNiYmI7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNkZGQ7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IG5vbmU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgICYgKyBsYWJlbDphZnRlclxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgY29sb3I6ICM5OTk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJi0tYmx1ZSArIGxhYmVsXHJcbiAgICB7XHJcbiAgICAgICAgJjpiZWZvcmUsICY6YWZ0ZXJcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNvbG9yOiAkYmx1ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuIiwiJXRhYnNcclxue1xyXG4gICAgQGV4dGVuZCAlcmVzZXQtbGlzdDtcclxuXHJcbiAgICAmX19pdGVtXHJcbiAgICB7XHJcbiAgICAgICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgICAgIGFcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICAgICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICAgICAgICAgIHBhZGRpbmc6IDEwcHggMTVweDtcclxuICAgICAgICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cclxuICAgICAgICAgICAgJjpob3ZlclxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleUxpZ2h0ZXI7XHJcbiAgICAgICAgICAgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgJi0tYWN0aXZlXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgJGJsdWU7XHJcblxyXG4gICAgICAgICAgICBhXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiAkYmxhY2tEYXJrZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLyB2IHN0YW5kIGZvciB2ZXJ0aWNhbFxyXG4gICAgJl9faXRlbXZcclxuICAgIHtcclxuICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICBtYXJnaW46IC4yZW0gMDtcclxuXHJcbiAgICAgICAgYVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBibG9jaztcclxuICAgICAgICAgICAgcGFkZGluZzogMTBweCAxNXB4O1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleUxpZ2h0ZXI7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbiAgICAgICAgICAgICY6aG92ZXJcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZXlMaWdodDtcclxuICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICAmLS1hY3RpdmVcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAycHggc29saWQgJGJsdWU7XHJcbiAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5TGlnaHQ7XHJcblxyXG4gICAgICAgICAgICBhXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5TGlnaHQ7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJGJsYWNrRGFya2VyO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIiV0ZXh0ZmllbGRcclxue1xyXG4gICAgcGFkZGluZzogMTJweDtcclxuICAgIG1hcmdpbjogM3B4IDA7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAkZ3JleUxpZ2h0O1xyXG4gICAgYm9yZGVyLXJhZGl1czogMDtcclxuICAgIEBpbmNsdWRlIHBsYWNlaG9sZGVyLWNvbG9yKCR3aGl0ZSk7XHJcblxyXG4gICAgJl9faGVscGVyIHtcclxuICAgICAgICBjb2xvcjogJGdyZXlEYXJrO1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAyO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2Vycm9yIHtcclxuICAgICAgICBjb2xvcjogJHJlZDtcclxuICAgICAgICBmb250LXNpemU6IDEuMnJlbTtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjtcclxuICAgIH1cclxuICAgICAgICBcclxuICAgICYtLWVycm9yXHJcbiAgICB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgJHJlZDtcclxuICAgIH1cclxuICAgIFxyXG4gICAgJi0tbGFyZ2UgXHJcbiAgICB7XHJcbiAgICAgICAgcGFkZGluZzogMjBweDtcclxuICAgIH1cclxuXHJcbiAgICAmLS1yYWRpdXNcclxuICAgIHtcclxuICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKDAuMjVlbSk7XHJcbiAgICB9XHJcblxyXG4gICAgJi0tcmFkaXVzLWxlZnR7XHJcbiAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMC4yNWVtO1xyXG4gICAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDAuMjVlbTtcclxuICAgIH1cclxuXHJcbiAgICAmLS1yYWRpdXMtcmlnaHR7XHJcbiAgICAgICAgYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDAuMjVlbTtcclxuICAgICAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMC4yNWVtOyAgICAgICAgXHJcbiAgICB9XHJcblxyXG4gICAgJi0tc2hhZG93e1xyXG4gICAgICAgICY6Zm9jdXN7XHJcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogIzUxYTdlODtcclxuICAgICAgICAgICAgb3V0bGluZTogbm9uZTtcclxuICAgICAgICAgICAgYm94LXNoYWRvdzogaW5zZXQgMCAxcHggMnB4IHJnYmEoMCwwLDAsMC4wNzUpLDAgMCA1cHggcmdiYSg4MSwxNjcsMjMyLDAuNSk7ICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiIsIkBpbXBvcnQgXCJ0ZXh0ZmllbGRcIjtcclxuXHJcbiVzZWxlY3Rcclxue1xyXG4gICAgQGV4dGVuZCAldGV4dGZpZWxkO1xyXG4gICAgQGluY2x1ZGUgYXBwZWFyYW5jZShub25lKTtcclxuXHJcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQWtBQUFBR0NBWUFBQUFSeDdURkFBQUFBWE5TUjBJQXJzNGM2UUFBQUoxSlJFRlVDQjFqek1uSkNXZGtaQlNkUEhueUZBWWswTkRRd1BibXpadVZURXhNazVpQTRwNy8vdjJiREZTY0MxT3phdFVxWnFDQzVmLy8vL2NIeWlrd2lZaUlKQUZOV2dJVW1BUlNDS1FaRHg0OE9BZElCd0pOU1o4eVpjcDhScEJ1b05GTVFKMExnUkl4UU80aElMWUZLc2dFT21FbVNKNFpSQnc0Y09DL2w1Zlh4dS9mdnlzRHViNUFrM09BSnN3QXlXRUFrSW01dWJsdTZCSUFEVFJIVzdZV3p4RUFBQUFBU1VWT1JLNUNZSUk9Jyk7XHJcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiByaWdodCA3cHggY2VudGVyO1xyXG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDsgIFxyXG4gICAgXHJcbiAgICAmLS1yYWRpdXNcclxuICAgIHtcclxuICAgICAgICBAaW5jbHVkZSBib3JkZXItcmFkaXVzKDAuMjVlbSk7XHJcbiAgICB9IFxyXG5cclxuICAgICYtLXNoYWRvd3tcclxuICAgICAgICAmOmZvY3Vze1xyXG4gICAgICAgICAgICBib3JkZXItY29sb3I6ICM1MWE3ZTg7XHJcbiAgICAgICAgICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICAgICAgICAgIGJveC1zaGFkb3c6IGluc2V0IDAgMXB4IDJweCByZ2JhKDAsMCwwLDAuMDc1KSwwIDAgNXB4IHJnYmEoODEsMTY3LDIzMiwwLjUpOyAgICAgICAgICAgIFxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIiV0YWJsZVxyXG57XHJcbiAgICBtYXgtd2lkdGg6IDEwMCU7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICRncmV5TGlnaHQ7XHJcbiAgICBib3JkZXItc3BhY2luZzogMDtcclxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7XHJcblxyXG4gICAgJl9faGVhZFxyXG4gICAge1xyXG4gICAgICAgIHRoXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBwYWRkaW5nOiA4cHg7XHJcbiAgICAgICAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRncmV5TGlnaHQ7XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAkZ3JleUxpZ2h0O1xyXG4gICAgICAgICAgICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG5cclxuICAgICAgICAgICAgJltzb3J0YWJsZT1cInRydWVcIl17XHJcbiAgICAgICAgICAgIFx0Y3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgICAgIFx0fSBcdFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19ib2R5XHJcbiAgICB7XHJcbiAgICAgICAgJiA+IHRyXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAmID4gdGRcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgcGFkZGluZzogOHB4O1xyXG4gICAgICAgICAgICAgICAgYm9yZGVyLXJpZ2h0OiAxcHggc29saWQgJGdyZXlMaWdodDtcclxuICAgICAgICAgICAgICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgJjpudGgtb2YtdHlwZShvZGQpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICRncmV5TGlnaHRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19zb3J0XHJcbiAgICB7XHJcbiAgICBcdCYtLWFzY1xyXG4gICAgXHR7XHJcbiAgICBcdFx0JjphZnRlcntcclxuICAgIFx0XHRcdGNvbnRlbnQ6ICdcXDI1QkUnO1xyXG4gICAgXHRcdFx0Zm9udC1zaXplOiAycmVtO1xyXG5cdFx0XHQgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0XHQgICAgZmxvYXQ6IHJpZ2h0O1xyXG5cdFx0XHQgICAgbWFyZ2luLXRvcDogLTdweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMDtcclxuICAgIFx0XHR9XHJcbiAgICBcdH1cclxuICAgIFx0Ji0tZGVzY1xyXG4gICAgXHR7XHJcbiAgICBcdFx0JjphZnRlcntcclxuICAgIFx0XHRcdGNvbnRlbnQ6ICdcXDI1QjQnO1xyXG4gICAgXHRcdFx0Zm9udC1zaXplOiAycmVtO1xyXG5cdFx0XHQgICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG5cdFx0XHQgICAgZmxvYXQ6IHJpZ2h0O1xyXG5cdFx0XHQgICAgbWFyZ2luLXRvcDogLTdweDtcclxuICAgICAgICAgICAgICAgIGhlaWdodDogMDtcclxuICAgIFx0XHR9XHJcbiAgICBcdH1cclxuICAgIH1cclxufVxyXG4iLCIlcGFnZXIge1xyXG4gICAgZm9udC1zaXplOiAxLjRyZW07XHJcbiAgICBAZXh0ZW5kICVyZXNldC1saXN0O1xyXG5cclxuICAgICZfX3BhZ2V7XHJcblx0XHR0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcblx0ICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuXHQgICAgZmxvYXQ6IGxlZnQ7XHJcblx0ICAgIHBhZGRpbmc6IDhweCAxNXB4O1xyXG5cdCAgICBtYXJnaW4tbGVmdDogLTVweDtcclxuXHQgICAgYmFja2dyb3VuZC1jb2xvcjogJHdoaXRlO1xyXG5cdCAgICBjb2xvcjogJGJsdWU7XHJcblx0XHRib3JkZXI6IDFweCBzb2xpZCAkZ3JleUxpZ2h0O1xyXG5cclxuXHRcdCYtLWFjdGl2ZXtcclxuXHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdFx0XHRjb2xvcjogJGJsYWNrRGFya2VyO1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleUxpZ2h0O1xyXG5cdFx0fVxyXG5cclxuXHRcdCY6Zm9jdXN7XHJcblx0XHRcdHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHRcdH1cclxuXHRcdFxyXG5cdFx0Jjpob3ZlcntcclxuXHRcdFx0dGV4dC1kZWNvcmF0aW9uOiBub25lO1xyXG5cdFx0XHRjb2xvcjogJGJsYWNrRGFya2VyO1xyXG5cdFx0XHRiYWNrZ3JvdW5kLWNvbG9yOiAkZ3JleUxpZ2h0O1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcbiAgICBsaXtcclxuICAgIFx0ZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXJhZGl1c3tcclxuICAgIFx0bGl7ICAgIFx0XHRcclxuXHQgICAgXHQmOmZpcnN0LWNoaWxkPmEsICY6Zmlyc3QtY2hpbGQ+c3BhbiB7XHJcblx0XHRcdCAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAwLjI1ZW07XHJcblx0XHRcdCAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwLjI1ZW07XHJcblx0XHRcdH1cclxuXHJcblx0XHRcdCY6bGFzdC1jaGlsZD5hLCAmOmxhc3QtY2hpbGQ+c3BhbiB7XHJcblx0XHRcdCAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMC4yNWVtO1xyXG5cdFx0XHQgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDAuMjVlbTtcclxuXHRcdFx0fVxyXG4gICAgXHR9XHJcbiAgICB9XHJcblxyXG59XHJcbiIsIiVhbGVydC1jbG9zZS1ydWxle1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgdG9wOiAtNHB4O1xyXG4gICAgcmlnaHQ6IC0yMXB4O1xyXG4gICAgcGFkZGluZzogMCAyMHB4O1xyXG4gICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgZm9udC1zaXplOiAxLjZyZW07XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XHJcbn1cclxuXHJcbiVhbGVydHtcclxuICAgIHBhZGRpbmc6IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAyMHB4OyBcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcblxyXG4gICAgJi0tcmFkaXVze1xyXG4gICAgICAgIEBpbmNsdWRlIGJvcmRlci1yYWRpdXMoLjI1ZW0pOyAgICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRidXR0b25WYXJpYW5zTmFtZSkgeyAgXHJcbiAgICAgICAgJi0tI3tudGgoJGJ1dHRvblZhcmlhbnNOYW1lLCAkaSl9IHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggZGFzaGVkIG50aCgkYnV0dG9uVmFyaWFuc0hleCwgJGkpO1xyXG4gICAgICAgICAgICBjb2xvcjogbnRoKCRidXR0b25WYXJpYW5zSGV4LCAkaSk7XHJcblxyXG4gICAgICAgICAgICAuYWxlcnRfX2Nsb3Nle1xyXG4gICAgICAgICAgICAgICAgQGV4dGVuZCAlYWxlcnQtY2xvc2UtcnVsZTtcclxuICAgICAgICAgICAgICAgIGNvbG9yOiBudGgoJGJ1dHRvblZhcmlhbnNIZXgsICRpKTtcclxuXHJcbiAgICAgICAgICAgICAgICAmOmhvdmVye1xyXG4gICAgICAgICAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIiVjYXJke1xyXG4gICAgQGluY2x1ZGUgYm94LXNoYWRvdygwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMikpO1xyXG4gICAgQGluY2x1ZGUgdHJhbnNpdGlvbigwLjNzKTtcclxuXHJcbiAgICAmOmhvdmVyIHtcclxuICAgICAgICBAaW5jbHVkZSBib3gtc2hhZG93KDAgOHB4IDE2cHggMCByZ2JhKDAsMCwwLDAuMikpO1xyXG4gICAgfVxyXG5cclxuICAgICYtLXJhZGl1c3tcclxuICAgIFx0QGluY2x1ZGUgYm9yZGVyLXJhZGl1cyguMjVlbSk7ICAgIFxyXG4gICAgfVxyXG5cclxuICAgIEBmb3IgJGkgZnJvbSAxIHRocm91Z2ggbGVuZ3RoKCRidXR0b25WYXJpYW5zTmFtZSkgeyAgXHJcbiAgICAgICAgJi0tI3tudGgoJGJ1dHRvblZhcmlhbnNOYW1lLCAkaSl9IHtcclxuICAgICAgICAgICAgYm9yZGVyOiAxcHggc29saWQgbnRoKCRidXR0b25WYXJpYW5zSGV4LCAkaSk7XHJcblxyXG4gICAgICAgICAgICAmID4gLmNhcmRfX2hlYWRlcntcclxuICAgICAgICAgICAgXHRwYWRkaW5nOiAxZW0gLjVlbTtcclxuICAgIFx0XHRcdGJhY2tncm91bmQtY29sb3I6IG50aCgkYnV0dG9uVmFyaWFuc0hleCwgJGkpO1xyXG4gICAgICAgICAgICBcdGNvbG9yOiBudGgoJGJ1dHRvblZhcmlhbnNGb250LCAkaSk7XHJcblxyXG4gICAgICAgICAgICBcdEBleHRlbmQgJWZsZXg7XHJcblxyXG4gICAgXHRcdH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX3RpdGxle1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMS42cmVtO1xyXG4gICAgICAgIGZvbnQtd2VpZ2h0OiBib2xkOyAgICAgICAgXHJcbiAgICB9XHJcbiAgICAmX190b29sc3tcclxuICAgICAgICAmID4gaSB7XHJcbiAgICAgICAgICAgIG1hcmdpbjogMCAuNWVtO1xyXG4gICAgICAgICAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgJl9fY29udGVudHtcclxuICAgIFx0cGFkZGluZzogMWVtIC41ZW07XHJcbiAgICB9XHJcblxyXG4gICAgXHJcbn0iLCIlcG9wb3ZlcntcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuXHJcbiAgICAmX19jb250ZW50e1xyXG4gICAgXHR2aXNpYmlsaXR5OiBoaWRkZW47XHJcblx0ICAgIGJhY2tncm91bmQtY29sb3I6ICRibGFja0xpZ2h0O1xyXG5cdCAgICBjb2xvcjogJHdoaXRlO1xyXG5cdCAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcblx0ICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuXHQgICAgcGFkZGluZzogMWVtO1xyXG5cdCAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0ICAgIHotaW5kZXg6IDE7XHJcblx0ICAgIGJvdHRvbTogMTI1JTtcclxuXHQgICAgbGVmdDogNTAlO1xyXG5cdCAgICBtYXJnaW4tbGVmdDogLTYwcHg7XHJcblx0ICAgIG9wYWNpdHk6IDA7XHJcblxyXG5cdCAgICBAaW5jbHVkZSB0cmFuc2l0aW9uKG9wYWNpdHkgMXMpO1xyXG5cclxuXHQgICAgJjphZnRlciB7XHJcblx0XHQgICAgY29udGVudDogXCJcIjtcclxuXHRcdCAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0XHQgICAgdG9wOiAxMDAlO1xyXG5cdFx0ICAgIGxlZnQ6IDUwJTtcclxuXHRcdCAgICBtYXJnaW4tbGVmdDogLTVweDtcclxuXHRcdCAgICBib3JkZXItd2lkdGg6IDVweDtcclxuXHRcdCAgICBib3JkZXItc3R5bGU6IHNvbGlkO1xyXG5cdFx0ICAgIGJvcmRlci1jb2xvcjogJGJsYWNrTGlnaHQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XHJcblx0XHR9XHJcbiAgICB9XHJcblxyXG4gICAgJjpob3ZlciB7XHJcbiAgICBcdC5wb3BvdmVyX19jb250ZW50eyAgICBcdFx0XHJcblx0XHQgICAgdmlzaWJpbGl0eTogdmlzaWJsZTtcclxuXHRcdCAgICBvcGFjaXR5OiAxO1xyXG4gICAgXHR9XHJcblx0fVxyXG59IiwiJW1vZGFsXHJcbntcclxuICAgIGRpc3BsYXk6IG5vbmU7IFxyXG4gICAgcG9zaXRpb246IGZpeGVkOyBcclxuICAgIHotaW5kZXg6IDk5OTsgXHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7IFxyXG4gICAgb3ZlcmZsb3c6IGF1dG87IFxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDAsMCwwKTsgXHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsMCwwLDAuNCk7ICAgXHJcblxyXG4gICAgJl9faGVhZGVyeyAgICAgICAgXHJcbiAgICAgICAgcGFkZGluZzogMnB4IDE2cHg7ICAgICAgXHJcblxyXG4gICAgICAgICYtLWJvcmRlcntcclxuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmV5O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgJi0tYmx1ZXtcclxuICAgICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGJsdWU7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgICAgLm1vZGFsX19jbG9zZSB7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgICZfX2NvbnRlbnQge1xyXG4gICAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkd2hpdGU7XHJcbiAgICAgICAgbWFyZ2luOiAxNSUgYXV0bztcclxuICAgICAgICBwYWRkaW5nOiAwO1xyXG4gICAgICAgIHdpZHRoOiA4MCU7XHJcblxyXG4gICAgICAgIGJveC1zaGFkb3cgOiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksMCA2cHggMjBweCAwIHJnYmEoMCwwLDAsMC4xOSk7IFxyXG4gICAgICAgICBcclxuICAgICAgICAtd2Via2l0LWFuaW1hdGlvbi1uYW1lOiBhbmltYXRldG9wO1xyXG4gICAgICAgIC13ZWJraXQtYW5pbWF0aW9uLWR1cmF0aW9uOiAwLjRzO1xyXG4gICAgICAgIGFuaW1hdGlvbi1uYW1lOiBhbmltYXRldG9wO1xyXG4gICAgICAgIGFuaW1hdGlvbi1kdXJhdGlvbjogMC40cztcclxuICAgICAgICBcclxuICAgIH0gXHJcblxyXG4gICAgJl9fYm9keSB7XHJcbiAgICAgICAgcGFkZGluZzogMnB4IDE2cHg7XHJcbiAgICB9XHJcblxyXG4gICAgJl9fZm9vdGVyIHtcclxuICAgICAgICBwYWRkaW5nOiAycHggMTZweDtcclxuXHJcbiAgICAgICAgJi0tYm9yZGVye1xyXG4gICAgICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgJGdyZXk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1ibHVle1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAkYmx1ZTtcclxuICAgICAgICAgICAgY29sb3I6IHdoaXRlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19jbG9zZSB7XHJcbiAgICAgICAgZmxvYXQ6IHJpZ2h0O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMjhweDtcclxuICAgICAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgICAgICBjb2xvcjogJGdyZXk7XHJcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xyXG4gICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuXHJcbiAgICAgICAgJjpob3ZlciwgJjpmb2N1cyB7XHJcbiAgICAgICAgICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn1cclxuXHJcbkAtd2Via2l0LWtleWZyYW1lcyBhbmltYXRldG9wIHtcclxuICAgIGZyb20ge3RvcDogLTMwMHB4OyBvcGFjaXR5OiAwfSBcclxuICAgIHRvIHt0b3A6IDA7IG9wYWNpdHk6IDF9XHJcbn1cclxuXHJcbkBrZXlmcmFtZXMgYW5pbWF0ZXRvcCB7XHJcbiAgICBmcm9tIHt0b3A6IC0zMDBweDsgb3BhY2l0eTogMH1cclxuICAgIHRvIHt0b3A6IDA7IG9wYWNpdHk6IDF9XHJcbn1cclxuIiwiXHJcbiVmb3Jte1xyXG4gICAgJl9fZ3JvdXB7XHJcbiAgICAgICAgQGV4dGVuZCAlZmxleDtcclxuICAgIH1cclxuXHJcbiAgICAmX193cmFwcGVye1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICAgIHBhZGRpbmc6IDdweCAwO1xyXG4gICAgfVxyXG5cclxuICAgICZfX2xhYmVse1xyXG4gICAgICAgIHdpZHRoOiAyMCU7XHJcbiAgICAgICAgbWluLXdpZHRoOiAxMDBweDtcclxuXHJcbiAgICAgICAgJi0tcmVxdWlyZWR7XHJcbiAgICAgICAgICAgICY6YWZ0ZXJ7XHJcbiAgICAgICAgICAgICAgICBjb250ZW50OiAnKic7XHJcbiAgICAgICAgICAgICAgICBjb2xvcjogJHJlZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19pY29ue1xyXG4gICAgICAgIGNvbG9yOiAkYmxhY2s7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogJGdyZXlMaWdodDtcclxuICAgICAgICBwYWRkaW5nOiAxM3B4O1xyXG5cclxuICAgICAgICAmLS1yYWRpdXMtbGVmdHtcclxuICAgICAgICAgICAgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMC4yNWVtO1xyXG4gICAgICAgICAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAwLjI1ZW07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAmLS1yYWRpdXMtcmlnaHR7XHJcbiAgICAgICAgICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwLjI1ZW07XHJcbiAgICAgICAgICAgIGJvcmRlci1ib3R0b20tcmlnaHQtcmFkaXVzOiAwLjI1ZW07ICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQWdJQyxBV2hJRCxVWGdJUSxDV2hJSSxFQUNYLE1BQU0sRUFBRSxDQUFDLEVBQ1QsT0FBTyxFQUFFLENBQUMsRUFDVixVQUFVLEVBQUUsSUFBSSxHQUNoQjs7QUNKRCw0RUFBNEU7QUFFNUUsb05BS0c7QUFFSCx5RkFDZ0Y7QUFFaEYsQUFBQSxJQUFJLENBQUMsRUFDSCxXQUFXLEVBQUUsVUFBVSxFQUFHLE9BQU8sQ0FDakMsV0FBVyxFQUFFLElBQUksRUFBRyxPQUFPLENBQzNCLG9CQUFvQixFQUFFLElBQUksRUFBRyxPQUFPLENBQ3BDLHdCQUF3QixFQUFFLElBQUksRUFBRyxPQUFPLEVBQ3pDOztBQUVELHlGQUNnRjtBQUVoRix1REFFRztBQUVILEFBQUEsSUFBSSxDQUFDLEVBQ0gsTUFBTSxFQUFFLENBQUMsR0FDVjs7QUFFRCx3Q0FFRztBQUVILEFBQUEsT0FBTyxFQUNQLEFBQUEsS0FBSyxFQUNMLEFBQUEsTUFBTSxFQUNOLEFBQUEsTUFBTSxFQUNOLEFBQUEsR0FBRyxFQUNILEFBQUEsT0FBTyxDQUFDLEVBQ04sT0FBTyxFQUFFLEtBQUssR0FDZjs7QUFFRCxnSUFHRztBQUVILEFBQUEsRUFBRSxDQUFDLEVBQ0QsU0FBUyxFQUFFLEdBQUcsRUFDZCxNQUFNLEVBQUUsUUFBUSxHQUNqQjs7QUFFRCxpR0FDZ0Y7QUFFaEYsMEVBR0c7QUFFSCxBQUFBLFVBQVUsRUFDVixBQUFBLE1BQU0sRUFDTixBQUFBLElBQUksQ0FBQyxFQUFFLE9BQU8sQ0FDWixPQUFPLEVBQUUsS0FBSyxHQUNmOztBQUVELHNDQUVHO0FBRUgsQUFBQSxNQUFNLENBQUMsRUFDTCxNQUFNLEVBQUUsUUFBUSxHQUNqQjs7QUFFRCxxRkFHRztBQUVILEFBQUEsRUFBRSxDQUFDLEVBQ0QsVUFBVSxFQUFFLFdBQVcsRUFBRyxPQUFPLENBQ2pDLE1BQU0sRUFB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 */
